/*

접근 지정자
private 멤버
선언된 클래스 내에서만 접근 가능
파생 클래스에서도 기본 클래스의 private 멤버 직접 접근 불가
public 멤버
선언된 클래스나 외부 어떤 클래스, 모든 외부 함수에 접근 허용
파생 클래스에서 기본 클래스의 public 멤버 접근 가능
protected 멤버
선언된 클래스에서 접근 가능
파생 클래스에서만 접근 허용
파생 클래스가 아닌 다른 클래스나 외부 함수에서는 protected 멤버를 접근할 수 없다.

결론 -> protected member는 파생클래스에서만 접촉이 가능하다
예를 들어 파생클래스에서는 private영역에는 직접접근이 불가하나
protected는 파생클래스에 한에서는 가능하다

ex)
착각 하면 안되는 것이 직접적으로 private int x,y에 접근이 가능하다는 뜻이아니다
기본 클래스에서 protected a, b, set(),get()이 있다고 치면
파생클래스(p)에서도  p.a, p.b, p.set(),p.get()을 사용할 수 있다는 의미이다

8장 17p를 참고하자

질문 1
파생 클래스의 객체가 생성될 때 파생 클래스의 생성자와 기본 클래스의 생성자가 모두 실행되는가? 아니면 파생 클래스의 생성자만 실행되는가?
답 - 둘 다 실행된다.
(호출은 가장 마지막 자식부터 호출되나 실행은 재귀함수와 같이 가장 근본적인 기본 클래스부터 생성된다)
(따라서 소멸은 반대로 가장 자식부터 소멸되어 기본에서 마지막으로 소멸)
(하지만 호출이 중요한거니 파생b가 있으면 파생b가 기본b의 (별다른 조치가 없으면 기본)생성자를 호출한다)

질문 2
파생 클래스의 생성자와 기본 클래스의 생성자 중에서 어떤 생성자가 먼저 실행되는가?
답 - 기본 클래스의 생성자가 먼저 실행된 후 파생 클래스의 생성자가 실행된다.

*/